{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ryan_\\\\OneDrive\\\\Desktop\\\\Nascent Test\\\\nascent-frontend-test (2)\\\\nascent-frontend-test\\\\src\\\\components\\\\order-form.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { SideToggle } from \"./side-toggle\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const OrderForm = ({\n  entity\n}) => {\n  _s();\n  const [price, setPrice] = useState(0);\n  const [amount, setAmount] = useState(0);\n  const [side, setSide] = useState('BUY');\n  const toggleSideValue = side => {\n    setSide(side);\n  };\n  const notional = price * amount;\n  console.log(notional);\n  // const handleSubmit = (event) => {\n  //     event.preventDefault();\n  //     // submit order\n  //   };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(SideToggle, {\n      side: side,\n      toggleSideValue: toggleSideValue\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Price:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: price,\n          onChange: event => setPrice(Number(event.target.value))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Amount:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: amount,\n          onChange: event => setAmount(Number(event.target.value))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Notional:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: notional\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `w-auto h-auto m-auto border rounded-md ${side === 'BUY' ? 'border-green-500' : 'border-red-500'}`,\n        type: \"submit\",\n        children: side\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(OrderForm, \"V/Ngr1lL5jxhbjh8PpH91yCEzcE=\");\n_c = OrderForm;\nvar _c;\n$RefreshReg$(_c, \"OrderForm\");","map":{"version":3,"names":["useState","SideToggle","jsxDEV","_jsxDEV","OrderForm","entity","_s","price","setPrice","amount","setAmount","side","setSide","toggleSideValue","notional","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","event","Number","target","className","_c","$RefreshReg$"],"sources":["C:/Users/ryan_/OneDrive/Desktop/Nascent Test/nascent-frontend-test (2)/nascent-frontend-test/src/components/order-form.tsx"],"sourcesContent":["import { FC, useState } from \"react\";\r\nimport { EntityType } from \"../types/entity-type\";\r\nimport { SideType } from \"../types/side-type\";\r\nimport { SideToggle } from \"./side-toggle\";\r\n\r\ntype OrderFormProps = {\r\n    entity: EntityType\r\n\r\n}\r\n\r\nexport const OrderForm: FC<OrderFormProps> = ({ entity }) => {\r\n  const [price, setPrice] = useState(0);\r\n  const [amount, setAmount] = useState(0);\r\n  const [side, setSide] = useState<SideType>('BUY')\r\n\r\n  const toggleSideValue = (side: SideType) => {\r\n    setSide(side)\r\n  }\r\n\r\n  const notional = price * amount\r\n    console.log(notional)\r\n  // const handleSubmit = (event) => {\r\n  //     event.preventDefault();\r\n  //     // submit order\r\n  //   };\r\n\r\n  return (\r\n    <div>\r\n      <SideToggle side={side} toggleSideValue={toggleSideValue}/>\r\n      <form>\r\n        <div>\r\n          <label>Price:</label>\r\n          <input\r\n            type=\"text\"\r\n            value={price}\r\n            onChange={(event) => setPrice(Number(event.target.value))}\r\n          />\r\n        </div>\r\n        <div>\r\n          <label>Amount:</label>\r\n          <input\r\n            type=\"text\"\r\n            value={amount}\r\n            onChange={(event) => setAmount(Number(event.target.value))}\r\n          />\r\n        </div>\r\n        <div className=\"flex\">\r\n            <label>Notional:</label>\r\n            <p>{notional}</p>\r\n        </div>\r\n        <button className={`w-auto h-auto m-auto border rounded-md ${side === 'BUY' ? 'border-green-500' : 'border-red-500'}`} type=\"submit\">{side}</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}