{"ast":null,"code":"// Orderbook API\nexport const getOrderbook = async entity => {\n  try {\n    const response = await fetch(`/orderbook/${entity}`);\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error(\"Error fetching order book:\", error);\n    return null;\n  }\n};\n\n// Trade API\nexport const sendTrade = async order => {\n  try {\n    const response = await fetch(`/trade`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(order)\n    });\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error(\"Error executing trade:\", error);\n    return null;\n  }\n};","map":{"version":3,"names":["getOrderbook","entity","response","fetch","data","json","error","console","sendTrade","order","method","headers","body","JSON","stringify"],"sources":["C:/Users/ryan_/OneDrive/Desktop/Nascent Test/nascent-frontend-test (2)/nascent-frontend-test/src/api/api.ts"],"sourcesContent":["import { EntityType } from \"../types/entity-type\";\nimport { OrderType } from \"../types/order-type\";\n\n// Orderbook API\nexport const getOrderbook = async (entity: EntityType) => {\n  try {\n    const response = await fetch(`/orderbook/${entity}`);\n    const data = await response.json();\n    return data\n  } catch (error) {\n    console.error(\"Error fetching order book:\", error);\n    return null;\n  }\n};\n\n// Trade API\nexport const sendTrade = async (order: OrderType) => {\n    try {\n        const response = await fetch(`/trade`, {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(order)\n          });\n        const data = await response.json();\n        return data;\n      } catch (error) {\n        console.error(\"Error executing trade:\", error);\n        return null;\n      }\n};\n"],"mappings":"AAGA;AACA,OAAO,MAAMA,YAAY,GAAG,MAAOC,MAAkB,IAAK;EACxD,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,cAAaF,MAAO,EAAC,CAAC;IACpD,MAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;IAClC,OAAOD,IAAI;EACb,CAAC,CAAC,OAAOE,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IAClD,OAAO,IAAI;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAME,SAAS,GAAG,MAAOC,KAAgB,IAAK;EACjD,IAAI;IACA,MAAMP,QAAQ,GAAG,MAAMC,KAAK,CAAE,QAAO,EAAE;MACnCO,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,KAAK;IAC5B,CAAC,CAAC;IACJ,MAAML,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;IAClC,OAAOD,IAAI;EACb,CAAC,CAAC,OAAOE,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAC9C,OAAO,IAAI;EACb;AACN,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}